//The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1+2+3+4+5+6+7=28. The first ten terms would be:

//              1,3,6,10,15,21,28,,36,45,55,...

// Let us list the factors of the first seven triangle numbers:

// 1: 1
// 3: 1,3
// 6: 1,2,3,6
// 10: 1,2,5,10
// 15: 1,3,5,15
// 21: 1,3,7,21
// 28: 1,2,4,7,14,28

// We can see that 28 is the first triangle number to have over five divisor.

// What is the value of the first triangle number to have over five hundred divisors?

function findDivisors(number) {
    let divisors = [];
    for (i=1; i <= number; i++) {
        if (number%i===0){
            divisors.push(i);
        }
    }
    return divisors;
}

function findDivisorsofTriangleNumbers() {
    let result ;
    for (let i=1, newArr, triangleNumberResult= 0; findDivisors.length <= 5  ; i ++) {
        triangleNumberResult += i
        console.log(triangleNumberResult)
        findDivisors(triangleNumberResult);

        result = newArr;
    
    }
    console.log(`The ${i}th triangle number have more than 5 divisors`)
    console.log(`The divisors are: `)
    console.log(result)
}